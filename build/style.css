:root
{
	--light-green: #00FF41;
	--green: #008F11;
	--dark-green: #003B00;
}

html, body
{
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;

	font-family: 'Courier New', Courier, monospace;
	font-size: 1.2em;
	color: var(--light-green);
	background: black;

	display: flex;
}

.danger
{
	color: red;
}

.center
{
	text-align: center;
}

.right
{
	text-align: right;
}

.clear
{
	display: block;
	clear: both;
}

.h1
{
	font-size: 2em;
	font-weight: 500;
}

.h2
{
	font-size: 1.5em;
	font-weight: 500;
}

.h3
{
	font-size: 1.3em;
}

#panels
{
	width: 100%;
	height: 100%;

	display: flex;
}

.panel
{
	width: 100%;
	height: 100%;

	flex-direction: column;
}

.columns
{
	flex-grow: 1;

	display: flex;
	margin: 0.5em;

	max-height: calc(100% - 1em);
}

.col
{
	position: relative;
	margin: 0.5em;
	padding: 1em;
	border: 0.1em solid var(--dark-green);
	border-radius: 0.5em;

	flex-shrink: 0;

	display: flex;
	flex-direction: column;
}

.col-large
{
	width: calc(66% - 0.8em);
}

.col-small
{
	width: calc(33% - 0.8em);
}

a
{
	color: var(--light-green);
	text-decoration: none;
}

a.inline
{
	display: inline-block;
}

a.previous-panel
{
	position: absolute;
	left: 1em;
	top: 0.5em;
}

hr
{
	width: 100%;
	border: none;
	border-bottom: 0.1em solid var(--dark-green);
}

ul
{
	margin: 0;
	padding: 0;
	padding-left: 1em;
	list-style-type: "﹣";

	flex-grow: 1;
}

ul.scrollable
{
	overflow-x: visible;
	overflow-y: scroll;
}

ul.no-symbol
{
	list-style-type: none;
	padding-left: 0;
}

li
{
	position: relative;
	padding: 0.2em 0;
}

li .li-right
{
	float: right;
	margin-right: 1em;
}

li a
{
	display: block;
}

li a:hover
{
	background-color: var(--green);
}

li a.danger:hover
{
	background-color: maroon;
}
    
.tooltip
{
	visibility: hidden;
	width: calc(70%);
	background-color: black;
	text-align: center;
	padding: 0.2em;

	border: 1px solid var(--green);
	border-radius: 6px;

	position: absolute;
	z-index: 1;
	top: calc(100% + 0.2em);
	left: 0;

	opacity: 0;
  	transition: opacity 0.5s;
}

:hover > .tooltip
{
	visibility: visible;
	opacity: 1;
}

li.has-children
{
	list-style-type: "▸";
}

li.is-opened
{
	list-style-type: "▾";
}

li.disabled a
{
	font-style: italic;
	cursor: default;
	color: var(--green);
}

li.disabled a:hover
{
	background-color: inherit;
}

.file-hint
{
	display: inline-block;
	color: gold;
	margin-top: -0.2em;
	margin-right: 0.5em;
}

.size-span
{
	display: inline-block;
	width: 10ch;
	text-align: right;
}

#mission-path
{
	border-top: 1px solid var(--green);
	border-bottom: 1px solid var(--green);

	padding: 0.2em 0.5em;
	margin: 0 -1em;
}

#mission-file-tree
{
	margin-top: 0.8em;
}

#mission-time
{
	text-align: center;
	font-size: 1.5em;
}

.money::after
{
	content: " €";
}

a.button-link
{
	margin: 0.5em 0;
	padding: 4px;

	display: block;
	text-align: center;

	border: 2px solid var(--green);
}

progress
{
	margin-bottom: 0.5em;
	
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;

	border: 2px solid var(--green);
	background-color: black;
}

progress::-moz-progress-bar
{
	background-color: var(--green);
}

progress.warning::-moz-progress-bar
{
	background-color: orange;
}

progress.full::-moz-progress-bar
{
	background-color: red;
}

#dl-popup
{
	display: none;

	position: absolute;
	background-color: black;

	top: 40%;
	width: calc(100% - 2em);

	padding: 2em;
	border: 1px solid var(--green);
}

#dl-progress
{
	width: 100%;
}
* {
	outline: none;
	border: none;
	box-sizing: border-box;
}

*:before,
*:after {
	box-sizing: border-box;
}

:root {
	--rotateSpeed: 40s;
	--jaugeSpeed: 5s;
	--keyColor: rgba(0, 255, 255, 0.747);
	--keyColorNoOppacity: rgba(0, 255, 255, 1);
	--keyColorHovered: rgba(2, 163, 163, 0.747);
	--connectorColor: rgba(177, 177, 177, 0.678);
	--connectorColorNoOppacity: rgba(177, 177, 177, 1);
	--connectorHoleColor: #000f;
}

@keyframes sceneRotate {
	to {
		transform: rotateY(360deg);
	}
}

@keyframes jaugeHeight {
	0% {
		width: 0%;
	}

	50% {
		width: 5.4em;
	}

	100% {
		width: 0%;
	}
}


#menu {
	background-color: black;
	height: 100vh;
	display: flex;
	overflow: hidden;
	justify-content: center;
	align-items: center;
	perspective: 10em;
	perspective-origin: 50% calc(50% - 3em);
	font-size: 3em;
}


.scene {
	transform-style: preserve-3d;
	-moz-transform-style: preserve-3d;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	animation-duration: var(--rotateSpeed);
	animation-name: sceneRotate;
}

.floor {
	position: absolute;
	transform: translate(-50%, -50%) rotateX(90deg);
	top: 1em;
	width: 20em;
	height: 20em;
	background-image:
		radial-gradient(#0000, #000 75%),
		repeating-conic-gradient(from 45deg,
			#111 0deg 90deg,
			#222 90deg 180deg);
	background-size: 100%, 1em 1em;
}

.storage {
	position: absolute;
	transform-style: preserve-3d;
	-moz-transform-style: preserve-3d;
	width: 6em;
	height: 1em;
	top: 0em;
	left: -1em;
}

.leftStorage,
.rightStorage,
.frontStorage,
.backStorage,
.topStorage,
.bottomStorage {
	background: var(--keyColor);
	position: absolute;
	width: 100%;
	height: 100%;
	box-shadow: 0 0 0.5em #000a inset;
}

.jaugeContainerStorage,
.jaugeStorage {
	position: absolute;
	width: 100%;
	height: 100%;
	box-shadow: 0 0 0.5em #000a inset;
}

.jaugeStorage {
	background: linear-gradient(90deg, green 3.5em, orange 3.5em, orange 4.5em, red 4.5em);
	transform: translateY(-0.83em) rotateX(90deg);
	height: 1.4em;
	width: 5.4em;
	bottom: -0.5em;
	left: 0.3em;
	animation-name: jaugeHeight;
	animation-duration: var(--jaugeSpeed);
	animation-iteration-count: infinite;
	animation-timing-function: linear;

}

.jaugeContainerStorage {
	background: black;
	transform: translateY(-0.725em) rotateX(90deg);
	height: 1.6em;
	width: 5.6em;
	bottom: -0.5em;
	left: 0.2em;
}

.frontStorage {
	transform: translateZ(1em);
}

.backStorage {
	transform: rotateY(180deg) translateZ(1em);
}

.rightStorage {
	transform: rotateY(90deg) translateZ(5em);
	width: 2em;
}

.leftStorage {
	background: var(--keyColorNoOppacity);
	transform: rotateY(270deg) translateZ(1em);
	width: 2em;
}

.topStorage {
	transform: translateY(-0.5em) rotateX(90deg);
	display: inline-block;
	height: 2em;
	bottom: -0.5em;
}

.bottomStorage {
	transform: translateY(1em) rotateX(90deg);
	height: 2em;
	bottom: 0;
	background: #000a;
	box-shadow: 0 0 0.5em #000;
}



.connector {
	position: absolute;
	width: 1.8em;
	height: 0.5em;
	top: 0.25em;
	left: -2.8em;
	transform-style: preserve-3d;
	-moz-transform-style: preserve-3d;
}

.leftConnector,
.rightConnector,
.frontConnector,
.backConnector,
.topConnector,
.bottomConnector {
	background: var(--connectorColor);
	position: absolute;
	width: 100%;
	height: 100%;
	box-shadow: 0 0 0.5em #000a inset;
}

.leftHoleConnector,
.rightHoleConnector {
	background: var(--connectorHoleColor);
	position: absolute;
	width: 0.25em;
	height: 0.25em;
}

.frontConnector {
	transform: translateZ(0.9em);
}

.backConnector {
	transform: rotateY(180deg) translateZ(0.9em);
}

.rightConnector {
	background: var(--connectorColorNoOppacity);
	transform: rotateY(90deg) translateZ(0.89em);
	width: 1.8em;
}

.leftConnector {
	transform: rotateY(270deg) translateZ(0.9em);
	width: 1.8em;
}

.topConnector {
	transform: rotateX(90deg);
	height: 1.8em;
	bottom: -0.425em;
}

.bottomConnector {
	transform: translateY(1em) rotateX(90deg);
	height: 1.8em;
	bottom: 0.1em;
	background: #000a;
}

.leftHoleConnector {
	transform: translate3D(1em, -0.12em, 0.5em) rotateX(90deg);
}

.rightHoleConnector {
	transform: translate3D(1em, -0.12em, -0.5em) rotateX(90deg);
}


.menu {
	height: 100vh;
	width: auto;
	position: absolute;

	display: flex;
	vertical-align: center;
	flex-direction: column;
	justify-content: space-between;
}

.gameBar {
	display: flex;
	vertical-align: center;
	flex-direction: column;
	justify-content: center;
}

.gameTitle {
	text-align: center;
	font-size: 1.5em;
	font-weight: normal;
	color: var(--green);
	margin-bottom: 0px;
}

.gameProducer {
	color: var(--green);
	text-align: right;
	font-size: 0.5em;
}

.menuButton {
	width: 60vw;
	margin: auto;
	text-align: center;
	padding: 0.1em 0;
	margin-bottom: 2em;
	font-size: 1em;
	border: 1px solid var(--green);
}

.menuButton:hover {
	background: var(--green);
}
